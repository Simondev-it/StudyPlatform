// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StudyPlatform.Models;

#nullable disable

namespace Repository.Migrations
{
    [DbContext(typeof(StudyPlatformContext))]
    [Migration("20250706160208_minh-7-6-11h")]
    partial class minh7611h
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("StudyPlatform.Models.AccomplishAchievement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly?>("AchieveDate")
                        .HasColumnType("date");

                    b.Property<int>("AchievementId")
                        .HasColumnType("int");

                    b.Property<int>("Progress")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Accompli__3214EC073D103B13");

                    b.HasIndex("AchievementId");

                    b.HasIndex("UserId");

                    b.ToTable("AccomplishAchievement", (string)null);
                });

            modelBuilder.Entity("StudyPlatform.Models.Achievement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id")
                        .HasName("PK__Achievem__3214EC07558ABA9F");

                    b.ToTable("Achievement", (string)null);
                });

            modelBuilder.Entity("StudyPlatform.Models.BoughtSubject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Feedback")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateOnly>("PurchaseDate")
                        .HasColumnType("date");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<int>("SubjectId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__BoughtSu__3214EC073576AFF1");

                    b.HasIndex("SubjectId");

                    b.HasIndex("UserId");

                    b.ToTable("BoughtSubject", (string)null);
                });

            modelBuilder.Entity("StudyPlatform.Models.Chapter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<int>("SubjectId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Chapter__3214EC07CAB9C806");

                    b.HasIndex("SubjectId");

                    b.ToTable("Chapter", (string)null);
                });

            modelBuilder.Entity("StudyPlatform.Models.ChapterProgress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ChapterId")
                        .HasColumnType("int");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Score")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__ChapterP__3214EC07B0F8A1C2");

                    b.HasIndex("ChapterId");

                    b.HasIndex("UserId");

                    b.ToTable("ChapterProgress", (string)null);
                });

            modelBuilder.Entity("StudyPlatform.Models.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Answer")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CommentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Content")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("QuestionId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Comment__3214EC071251393B");

                    b.HasIndex("QuestionId");

                    b.HasIndex("UserId");

                    b.ToTable("Comment", (string)null);
                });

            modelBuilder.Entity("StudyPlatform.Models.Following", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly?>("FollowDate")
                        .HasColumnType("date");

                    b.Property<int>("FollowingId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Followin__3214EC07F7E6389C");

                    b.HasIndex("UserId");

                    b.ToTable("Following", (string)null);
                });

            modelBuilder.Entity("StudyPlatform.Models.Progress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BoughtSubjectId")
                        .HasColumnType("int");

                    b.Property<int>("Chapter")
                        .HasColumnType("int");

                    b.Property<int>("Topic")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Progress__3214EC0788BB66A6");

                    b.HasIndex("BoughtSubjectId")
                        .IsUnique();

                    b.ToTable("Progress", (string)null);
                });

            modelBuilder.Entity("StudyPlatform.Models.Question", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Answers")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("CorrectAnswer")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Explanation")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Note")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<string>("Question1")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Question");

                    b.Property<int>("TopicId")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id")
                        .HasName("PK__Question__3214EC07ABE614F6");

                    b.HasIndex("TopicId");

                    b.ToTable("Question", (string)null);
                });

            modelBuilder.Entity("StudyPlatform.Models.Subject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly?>("LastEditDate")
                        .HasColumnType("date");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<DateOnly?>("UploadDate")
                        .HasColumnType("date");

                    b.HasKey("Id")
                        .HasName("PK__Subject__3214EC078D1EED7E");

                    b.ToTable("Subject", (string)null);
                });

            modelBuilder.Entity("StudyPlatform.Models.Topic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ChapterId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Topic__3214EC072EC309E3");

                    b.HasIndex("ChapterId");

                    b.ToTable("Topic", (string)null);
                });

            modelBuilder.Entity("StudyPlatform.Models.TopicProgress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Score")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("TopicId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__TopicPro__3214EC073D65CB7D");

                    b.HasIndex("TopicId");

                    b.HasIndex("UserId");

                    b.ToTable("TopicProgress", (string)null);
                });

            modelBuilder.Entity("StudyPlatform.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CuratorId")
                        .HasColumnType("int");

                    b.Property<int>("DayStreak")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("HighestDayStreak")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly?>("JoinedDate")
                        .HasColumnType("date");

                    b.Property<DateOnly?>("LastOnline")
                        .HasColumnType("date");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Password")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Point")
                        .HasColumnType("int");

                    b.Property<string>("Role")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id")
                        .HasName("PK__User__3214EC07E64390ED");

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("StudyPlatform.Models.AccomplishAchievement", b =>
                {
                    b.HasOne("StudyPlatform.Models.Achievement", "Achievement")
                        .WithMany("AccomplishAchievements")
                        .HasForeignKey("AchievementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Accomplis__Achie__5441852A");

                    b.HasOne("StudyPlatform.Models.User", "User")
                        .WithMany("AccomplishAchievements")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Accomplis__UserI__5535A963");

                    b.Navigation("Achievement");

                    b.Navigation("User");
                });

            modelBuilder.Entity("StudyPlatform.Models.BoughtSubject", b =>
                {
                    b.HasOne("StudyPlatform.Models.Subject", "Subject")
                        .WithMany("BoughtSubjects")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__BoughtSub__Subje__47DBAE45");

                    b.HasOne("StudyPlatform.Models.User", "User")
                        .WithMany("BoughtSubjects")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__BoughtSub__UserI__48CFD27E");

                    b.Navigation("Subject");

                    b.Navigation("User");
                });

            modelBuilder.Entity("StudyPlatform.Models.Chapter", b =>
                {
                    b.HasOne("StudyPlatform.Models.Subject", "Subject")
                        .WithMany("Chapters")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Chapter__Subject__398D8EEE");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("StudyPlatform.Models.ChapterProgress", b =>
                {
                    b.HasOne("StudyPlatform.Models.Chapter", "Chapter")
                        .WithMany("ChapterProgresses")
                        .HasForeignKey("ChapterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__ChapterPr__Chapt__4D94879B");

                    b.HasOne("StudyPlatform.Models.User", "User")
                        .WithMany("ChapterProgresses")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__ChapterPr__UserI__4C6B5938");

                    b.Navigation("Chapter");

                    b.Navigation("User");
                });

            modelBuilder.Entity("StudyPlatform.Models.Comment", b =>
                {
                    b.HasOne("StudyPlatform.Models.Question", "Question")
                        .WithMany("Comments")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Comment__Questio__440B1D61");

                    b.HasOne("StudyPlatform.Models.User", "User")
                        .WithMany("Comments")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Comment__UserId__44FF419A");

                    b.Navigation("Question");

                    b.Navigation("User");
                });

            modelBuilder.Entity("StudyPlatform.Models.Following", b =>
                {
                    b.HasOne("StudyPlatform.Models.User", "User")
                        .WithMany("FollowingUsers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Following__UserI__59063A47");

                    b.Navigation("User");
                });

            modelBuilder.Entity("StudyPlatform.Models.Progress", b =>
                {
                    b.HasOne("StudyPlatform.Models.BoughtSubject", "BoughtSubject")
                        .WithOne("Progress")
                        .HasForeignKey("StudyPlatform.Models.Progress", "BoughtSubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Progress__Bought__4BAC3F29");

                    b.Navigation("BoughtSubject");
                });

            modelBuilder.Entity("StudyPlatform.Models.Question", b =>
                {
                    b.HasOne("StudyPlatform.Models.Topic", "Topic")
                        .WithMany("Questions")
                        .HasForeignKey("TopicId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Question__TopicI__3F466844");

                    b.Navigation("Topic");
                });

            modelBuilder.Entity("StudyPlatform.Models.Topic", b =>
                {
                    b.HasOne("StudyPlatform.Models.Chapter", "Chapter")
                        .WithMany("Topics")
                        .HasForeignKey("ChapterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Topic__ChapterId__3C69FB99");

                    b.Navigation("Chapter");
                });

            modelBuilder.Entity("StudyPlatform.Models.TopicProgress", b =>
                {
                    b.HasOne("StudyPlatform.Models.Topic", "Topic")
                        .WithMany("TopicProgresses")
                        .HasForeignKey("TopicId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__TopicProg__Topic__4F7CD00D");

                    b.HasOne("StudyPlatform.Models.User", "User")
                        .WithMany("TopicProgresses")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__TopicProg__UserI__4E88ABD4");

                    b.Navigation("Topic");

                    b.Navigation("User");
                });

            modelBuilder.Entity("StudyPlatform.Models.Achievement", b =>
                {
                    b.Navigation("AccomplishAchievements");
                });

            modelBuilder.Entity("StudyPlatform.Models.BoughtSubject", b =>
                {
                    b.Navigation("Progress");
                });

            modelBuilder.Entity("StudyPlatform.Models.Chapter", b =>
                {
                    b.Navigation("ChapterProgresses");

                    b.Navigation("Topics");
                });

            modelBuilder.Entity("StudyPlatform.Models.Question", b =>
                {
                    b.Navigation("Comments");
                });

            modelBuilder.Entity("StudyPlatform.Models.Subject", b =>
                {
                    b.Navigation("BoughtSubjects");

                    b.Navigation("Chapters");
                });

            modelBuilder.Entity("StudyPlatform.Models.Topic", b =>
                {
                    b.Navigation("Questions");

                    b.Navigation("TopicProgresses");
                });

            modelBuilder.Entity("StudyPlatform.Models.User", b =>
                {
                    b.Navigation("AccomplishAchievements");

                    b.Navigation("BoughtSubjects");

                    b.Navigation("ChapterProgresses");

                    b.Navigation("Comments");

                    b.Navigation("FollowingUsers");

                    b.Navigation("TopicProgresses");
                });
#pragma warning restore 612, 618
        }
    }
}
